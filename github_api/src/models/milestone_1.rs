/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use jiff::Timestamp;
use serde::{Deserialize, Serialize};

/// Milestone1 : A collection of related issues and pull requests.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Milestone1 {
    #[serde(rename = "closed_at", deserialize_with = "Option::deserialize")]
    pub closed_at: Option<Timestamp>,
    #[serde(rename = "closed_issues")]
    pub closed_issues: i32,
    #[serde(rename = "created_at")]
    pub created_at: Timestamp,
    #[serde(rename = "creator", deserialize_with = "Option::deserialize")]
    pub creator: Option<Box<models::User2>>,
    #[serde(rename = "description", deserialize_with = "Option::deserialize")]
    pub description: Option<String>,
    #[serde(rename = "due_on", deserialize_with = "Option::deserialize")]
    pub due_on: Option<Timestamp>,
    #[serde(rename = "html_url")]
    pub html_url: String,
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "labels_url")]
    pub labels_url: String,
    #[serde(rename = "node_id")]
    pub node_id: String,
    /// The number of the milestone.
    #[serde(rename = "number")]
    pub number: i32,
    #[serde(rename = "open_issues")]
    pub open_issues: i32,
    /// The state of the milestone.
    #[serde(rename = "state")]
    pub state: super::milestone::State,
    /// The title of the milestone.
    #[serde(rename = "title")]
    pub title: String,
    #[serde(rename = "updated_at")]
    pub updated_at: Timestamp,
    #[serde(rename = "url")]
    pub url: String,
}
