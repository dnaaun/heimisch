/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InstallationAccount {
    /// Had to add an Option<> because I got an error from the
    /// GET /app/installations/{id} endpioint where this wasn't prvodied.
    #[serde(rename = "name")]
    pub name: Option<String>,
    #[serde(
        rename = "email",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub email: Option<Option<String>>,
    #[serde(rename = "login")]
    pub login: String,
    /// Unique identifier of the enterprise
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "node_id")]
    pub node_id: String,
    #[serde(rename = "avatar_url")]
    pub avatar_url: String,
    pub gravatar_id: Option<String>,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "html_url")]
    pub html_url: String,
    #[serde(rename = "followers_url")]
    pub followers_url: String,
    #[serde(rename = "following_url")]
    pub following_url: String,
    #[serde(rename = "gists_url")]
    pub gists_url: String,
    #[serde(rename = "starred_url")]
    pub starred_url: String,
    #[serde(rename = "subscriptions_url")]
    pub subscriptions_url: String,
    #[serde(rename = "organizations_url")]
    pub organizations_url: String,
    #[serde(rename = "repos_url")]
    pub repos_url: String,
    #[serde(rename = "events_url")]
    pub events_url: String,
    #[serde(rename = "received_events_url")]
    pub received_events_url: String,
    #[serde(rename = "type")]
    pub r#type: String,
    #[serde(rename = "site_admin")]
    pub site_admin: bool,
    #[serde(rename = "starred_at", skip_serializing_if = "Option::is_none")]
    pub starred_at: Option<String>,
    #[serde(rename = "user_view_type", skip_serializing_if = "Option::is_none")]
    pub user_view_type: Option<String>,
    /// A short description of the enterprise.
    #[serde(
        rename = "description",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub description: Option<Option<String>>,
    /// The enterprise's website URL.
    #[serde(
        rename = "website_url",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub website_url: Option<Option<String>>,

    /// Had to add an Option<> because I got an error from the
    /// GET /app/installations/{id} endpioint where this wasn't prvodied.
    /// The slug url identifier for the enterprise.
    #[serde(rename = "slug")]
    pub slug: Option<String>,

    pub created_at: Option<String>,
    pub updated_at: Option<String>,
}
