[package]
name = "shared"
version = "0.1.0"
edition = "2021"

[dependencies]
reqwest = { version = "0.12.8", features = ["json"] }
serde = { version = "1.0.210", features = ["derive"] }
url = { version = "2.5.2", features = ["serde"] }
github_webhook_body = { path = "../github_webhook_body" }
derive_more = { version = "1.0.0", features = ["as_ref", "deref", "display", "error", "from", "into", "constructor"] }
jiff = { version = "*", default-features = false, features = ["serde", "alloc", "std"] }
serde_json = "1.0.132"
tracing = "0.1.40"
github_api = { path = "../github_api" }
macros = { path = "../macros" }
typed_db = { path = "../typed_db", optional = false }
utils = { path = "../utils" }
idalloc = "0.1.1"
parking_lot = "0.12.3"

codee = { version = "0.2.0", features = ["json_serde"] }
diesel-derive-newtype = { version = "2.1.2", optional = true }
diesel = { version = "2.2.4", optional = true }
http = "1.1.0"
ewebsock = "0.8.0"
pin-project = "1.1.7"
serde_urlencoded = "0.7.1"
any_spawner = { version = "0.2.0", default-features = false }
tracing-subscriber = "0.3.19"
bon = "3.3.2"
mockall = "0.13.1"
maplit = "1.0.2"
bimap = "0.6.3"
derivative = "2.2.0"
futures = { version = "0.3.31", default-features = false }

# These are testing dependencies. BUt I can't put them in dev-dependencies
# because Cargo doesn't allow dev dependencies to be optional.
leptos = { version = "*", optional = true }
leptos_testing_utils = { path = "../leptos_testing_utils", optional = true }
tokio = { version = "1.47.1", default-features = false, features = ["rt-multi-thread", "rt"], optional = true }
gloo-timers = { version = "*", optional = true }
web-sys = { version = "*", optional = true, features = ["Performance"] }

[features]
default = ["ssr"]
hydrate = [
	"jiff/js",
	"typed_db/idb",
	"dep:leptos",
	"dep:leptos_testing_utils",
	"dep:gloo-timers",
	"dep:web-sys",
	"any_spawner/wasm-bindgen",
	"utils/hydrate",
]
ssr = [
	"github_api/ssr",
	"typed_db/sqlite",
	"dep:diesel-derive-newtype",
	"dep:diesel",
	"dep:tokio",
	"any_spawner/futures-executor",
]

# Otherwise (nightly) rust complains about `[wasm_bindgen_test]`
[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(wasm_bindgen_unstable_test_coverage)'] }
